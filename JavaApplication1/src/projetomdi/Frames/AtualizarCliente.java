/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projetomdi.Frames;

import static config.config.LOG_FILE;
import javax.swing.JOptionPane;
import projetomdi.Classes.CadastroCliente;
import projetomdi.Listener.AtualizarListener;
import projetomdi.Listener.CadastroListener;
import projetomdi.LogFile.LogFiles;
import projetomdi.Service.ClientesDAO;

/**
 *
 * @author CLIENTE
 */
public class AtualizarCliente extends javax.swing.JInternalFrame {

    AtualizarListener listener = new AtualizarListener(this);
    ClientesDAO clientesDao = new ClientesDAO();
    private String currentUser;

    public String getCurrentUser() {
        return currentUser;
    }

    public void setCurrentUser(String currentUser) {
        this.currentUser = currentUser;
    }

    public AtualizarCliente(String user) {
        initComponents();
        setCurrentUser(user);

    }

    public void Pesquisa() {

        if (clienteCodigo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Campos Vazios");

        } else {
            CadastroCliente cliente;
            try {
                cliente = clientesDao.getCadastroCliente(Integer.parseInt(clienteCodigo.getText()));
                TelaCadastro(cliente);
            } catch (NumberFormatException e) {
                LogFiles.setFileContentAsStackTrace(LOG_FILE, e, currentUser);
            }
           

        }

    }

    public void sair() {
        int resposta = JOptionPane.showConfirmDialog(null, "Realmente deseja Sair?", "Confirmação Sair", JOptionPane.YES_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {
            dispose();
        }
    }

    public void TelaCadastro(CadastroCliente cliente) {
        Cadastro cdCliente = new Cadastro(currentUser, cliente);
        cdCliente.setVisible(true);
        add(cdCliente);
        LogFiles.setFileContentAsStackTrace(LOG_FILE, currentUser + " acessou Cadastro");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        btnSair = new javax.swing.JButton();
        cliente2 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        clienteCodigo = new javax.swing.JFormattedTextField();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        btnSair.addActionListener(listener);
        btnSair.setActionCommand("limpar");
        btnSair.setText("Sair");

        cliente2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cliente2.setText("Código");

        btnBuscar.addActionListener(listener);
        btnBuscar.setActionCommand("buscar");
        btnBuscar.setText("Buscar");

        try {
            clienteCodigo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 227, Short.MAX_VALUE)
                        .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnBuscar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cliente2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(clienteCodigo)))
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(61, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cliente2)
                    .addComponent(clienteCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscar)
                    .addComponent(btnSair))
                .addGap(59, 59, 59))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnSair;
    private javax.swing.JLabel cliente2;
    private javax.swing.JFormattedTextField clienteCodigo;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    // End of variables declaration//GEN-END:variables
}
